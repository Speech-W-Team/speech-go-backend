// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"database/sql"
	"github.com/google/wire"
	"speech/config"
	"speech/internal/auth"
	"speech/internal/email"
	"speech/internal/sessions"
)

// Injectors from wire.go:

func InitializeAppWire(db *sql.DB, cfg *config.Config) *auth.UserServiceServer {
	postgresStorage := auth.ProvideUserStorage(db)
	verificationPostgresStorage := auth.ProvideVerificationStorage(db)
	sessionsPostgresStorage := sessions.ProvideSessionsStorage(db)
	authenticatedRepository := auth.ProvideAuthenticatedRepository(db, postgresStorage, verificationPostgresStorage, sessionsPostgresStorage)
	unauthenticatedRepository := auth.ProvideUnauthenticatedRepository(db, postgresStorage, verificationPostgresStorage, sessionsPostgresStorage)
	sender := email.ProvideEmailSender(cfg)
	userServiceServer := auth.ProvideUserServiceServer(authenticatedRepository, unauthenticatedRepository, sender)
	return userServiceServer
}

// wire.go:

var AppSet = wire.NewSet(sessions.Set, email.Set, auth.Set)
