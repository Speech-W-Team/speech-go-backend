syntax = "proto3";

package auth;

option go_package = "/internal/auth/proto/";

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";

service UserService {
  // User management
  rpc CreateUser(CreateUserRequest) returns (CreateUserResponse);
  rpc GetUser(GetUserRequest) returns (User);
  rpc UpdateUser(UpdateUserRequest) returns (User);
  rpc DeleteUser(DeleteUserRequest) returns (google.protobuf.Empty);

  // Authentication
  rpc Login(LoginRequest) returns (LoginResponse);
  rpc Logout(LogoutRequest) returns (google.protobuf.Empty);
  rpc RefreshToken(RefreshTokenRequest) returns (RefreshTokenResponse);

  // Email verification
  rpc SendVerificationEmail(SendVerificationEmailRequest) returns (google.protobuf.Empty);
  rpc VerifyEmail(VerifyEmailRequest) returns (google.protobuf.Empty);

  // Password reset
  rpc RequestPasswordReset(RequestPasswordResetRequest) returns (google.protobuf.Empty);
  rpc ResetPassword(ResetPasswordRequest) returns (google.protobuf.Empty);

  // Session management
  rpc GetUserSessions(GetUserSessionsRequest) returns (GetUserSessionsResponse);
  rpc DeleteSession(DeleteSessionRequest) returns (google.protobuf.Empty);

  // User roles
  rpc GetUserRoles(GetUserRolesRequest) returns (GetUserRolesResponse);
  rpc AddUserRole(AddUserRoleRequest) returns (google.protobuf.Empty);
  rpc RemoveUserRole(RemoveUserRoleRequest) returns (google.protobuf.Empty);

  // Avatar management
  rpc UpdateUserAvatar(UpdateUserAvatarRequest) returns (google.protobuf.Empty);
  rpc GetUserAvatarHistory(GetUserAvatarHistoryRequest) returns (GetUserAvatarHistoryResponse);
}

message User {
  string id = 1;
  string username = 2;
  string email = 3;
  optional string bio = 4;
  optional string current_avatar_url = 5;
  bool is_verified = 6;
  google.protobuf.Timestamp last_login = 7;
  google.protobuf.Timestamp created_at = 8;
  google.protobuf.Timestamp updated_at = 9;
  string account_status = 10;
  bool two_factor_enabled = 11;
  google.protobuf.Timestamp last_password_change = 12;
}

message CreateUserRequest {
  string username = 1;
  string email = 2;
  string password = 3;
  optional string bio = 4;
}

message CreateUserResponse {
  string access_token = 1;
  string refresh_token = 2;
  User user = 3;
}

message GetUserRequest {
  oneof identifier {
    string id = 1;
    string email = 2;
  }
}

message UpdateUserRequest {
  string id = 1;
  optional string username = 2;
  optional string email = 3;
  optional string bio = 4;
}

message DeleteUserRequest {
  string id = 1;
}

message LoginRequest {
  string email = 1;
  string password = 2;
}

message LoginResponse {
  string access_token = 1;
  string refresh_token = 2;
  User user = 3;
}

message LogoutRequest {
  string access_token = 1;
}

message RefreshTokenRequest {
  string refresh_token = 1;
}

message RefreshTokenResponse {
  string access_token = 1;
  string refresh_token = 2;
}

message SendVerificationEmailRequest {
  string user_id = 1;
}

message VerifyEmailRequest {
  string email = 1;
  string code = 2;
}

message RequestPasswordResetRequest {
  string email = 1;
}

message ResetPasswordRequest {
  string email = 1;
  string code = 2;
  string new_password = 3;
}

message Session {
  string id = 1;
  string user_id = 2;
  string device_info = 3;
  string ip_address = 4;
  google.protobuf.Timestamp created_at = 5;
  google.protobuf.Timestamp expires_at = 6;
}

message GetUserSessionsRequest {
}

message GetUserSessionsResponse {
  repeated Session sessions = 1;
}

message DeleteSessionRequest {
  string session_id = 1;
}

message GetUserRolesRequest {
  string user_id = 1;
}

message GetUserRolesResponse {
  repeated string roles = 1;
}

message AddUserRoleRequest {
  string user_id = 1;
  string role = 2;
}

message RemoveUserRoleRequest {
  string user_id = 1;
  string role = 2;
}

message UpdateUserAvatarRequest {
  string avatar_url = 2;
}

message AvatarHistory {
  string avatar_url = 1;
  google.protobuf.Timestamp changed_at = 2;
}

message GetUserAvatarHistoryRequest {
  string user_id = 1;
}

message GetUserAvatarHistoryResponse {
  repeated AvatarHistory history = 1;
}